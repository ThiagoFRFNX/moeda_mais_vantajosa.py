import streamlit as st
import requests

st.set_page_config(page_title="Conversor de Viagem", page_icon="üåç")

st.title("üí± Comparador de Pre√ßo: Peso vs D√≥lar")
st.markdown("Informe os pre√ßos em **pesos argentinos** e **d√≥lares**, e veja qual √© mais vantajoso pagar, com base na cota√ß√£o atual.")

# Entrada do usu√°rio
preco_pesos = st.number_input("Pre√ßo em pesos argentinos (ARS)", min_value=0.0, step=0.01)
preco_dolares = st.number_input("Pre√ßo em d√≥lares (USD)", min_value=0.0, step=0.01)

# Fun√ß√£o para obter cota√ß√µes
@st.cache_data
def obter_cotacoes():
    try:
        url = "https://economia.awesomeapi.com.br/last/USD-BRL,ARS-BRL"
        resposta = requests.get(url)
        dados = resposta.json()
        cotacao_usd = float(dados['USDBRL']['bid'])
        cotacao_ars = float(dados['ARSBRL']['bid'])
        return cotacao_usd, cotacao_ars
    except:
        return None, None

# Bot√£o para calcular
if st.button("Calcular melhor op√ß√£o"):
    cotacao_usd, cotacao_ars = obter_cotacoes()

    if cotacao_usd is None:
        st.error("Erro ao buscar cota√ß√µes.")
    else:
        valor_em_reais_pesos = preco_pesos * cotacao_ars
        valor_em_reais_dolares = preco_dolares * cotacao_usd

        st.subheader("üìà Cota√ß√µes do dia")
        st.write(f"1 USD = R$ {cotacao_usd:.2f}")
        st.write(f"1 ARS = R$ {cotacao_ars:.4f}")

        st.subheader("üí∞ Compara√ß√£o de valores")
        st.write(f"Pagando em **pesos**: R$ {valor_em_reais_pesos:.2f}")
        st.write(f"Pagando em **d√≥lares**: R$ {valor_em_reais_dolares:.2f}")

        st.subheader("üîé Resultado:")
        if valor_em_reais_pesos < valor_em_reais_dolares:
            st.success("‚úÖ Mais vantajoso pagar em **PESOS**.")
        elif valor_em_reais_pesos > valor_em_reais_dolares:
            st.success("‚úÖ Mais vantajoso pagar em **D√ìLARES**.")
        else:
            st.info("‚öñÔ∏è Tanto faz ‚Äî os valores s√£o iguais.")